{"version":3,"file":"favorites.js","sources":["../src/js/components/favorites-section.js"],"sourcesContent":["import { favoritesExercisesStore } from '../store/exercises';\nimport { draw_exercies } from './draw-filters';\nimport { initializePagination } from './pagination';\nimport { debounce } from './helpers';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const elements = {\n    exerciseCards: document.querySelector('.exercises__cards'),\n    paginationContainer: document.querySelector('#tui-pagination-container'),\n  };\n\n  const perPage = {\n    small: 8,\n    large: 10,\n  };\n\n  let currentPage = 1;\n  let currentBreakpoint = window.innerWidth <= 768 ? 'small' : 'large';\n\n  const getPaginatedExercises = (page, limit) => {\n    const allExercises = favoritesExercisesStore.favoritesExercises;\n    const totalExercises = allExercises.length;\n\n    const startIndex = (page - 1) * limit;\n    const endIndex = startIndex + limit;\n\n    const paginatedExercises = allExercises.slice(startIndex, endIndex);\n\n    return { paginatedExercises, totalExercises };\n  };\n\n  const renderPaginatedExercises = () => {\n    const { totalExercises, paginatedExercises } = getPaginatedExercises(\n      currentPage,\n      perPage[currentBreakpoint]\n    );\n\n    initializePagination(\n      Math.ceil(totalExercises / perPage[currentBreakpoint]),\n      perPage[currentBreakpoint],\n      currentPage,\n      onAfterMove\n    );\n\n    draw_exercies(paginatedExercises, true);\n  };\n\n  const onAfterMove = event => {\n    currentPage = event.page;\n    renderPaginatedExercises();\n  };\n\n  const onExerciseCardClick = e => {\n    e.preventDefault();\n\n    const removeButton = e.target.closest('.exercises__remove-btn');\n    if (!removeButton) return;\n\n    const exerciseId = removeButton.dataset.removeId;\n    favoritesExercisesStore.removeFavoriteExercise(exerciseId);\n\n    renderPaginatedExercises();\n  };\n\n  const onResize = debounce(() => {\n    const newBreakpoint = window.innerWidth <= 768 ? 'small' : 'large';\n\n    if (newBreakpoint === currentBreakpoint) return;\n    currentBreakpoint = newBreakpoint;\n\n    currentPage = 1;\n    renderPaginatedExercises();\n  }, 500);\n\n  elements.exerciseCards.addEventListener('click', onExerciseCardClick);\n  window.addEventListener('resize', onResize);\n\n  renderPaginatedExercises();\n});\n"],"names":["elements","perPage","currentPage","currentBreakpoint","getPaginatedExercises","page","limit","allExercises","favoritesExercisesStore","totalExercises","startIndex","endIndex","renderPaginatedExercises","paginatedExercises","initializePagination","onAfterMove","draw_exercies","event","onExerciseCardClick","removeButton","exerciseId","onResize","debounce","newBreakpoint"],"mappings":"iHAKA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMA,EAAW,CACf,cAAe,SAAS,cAAc,mBAAmB,EACzD,oBAAqB,SAAS,cAAc,2BAA2B,CAC3E,EAEQC,EAAU,CACd,MAAO,EACP,MAAO,EACX,EAEE,IAAIC,EAAc,EACdC,EAAoB,OAAO,YAAc,IAAM,QAAU,QAE7D,MAAMC,EAAwB,CAACC,EAAMC,IAAU,CAC7C,MAAMC,EAAeC,EAAwB,mBACvCC,EAAiBF,EAAa,OAE9BG,GAAcL,EAAO,GAAKC,EAC1BK,EAAWD,EAAaJ,EAI9B,MAAO,CAAE,mBAFkBC,EAAa,MAAMG,EAAYC,CAAQ,EAErC,eAAAF,EACjC,EAEQG,EAA2B,IAAM,CACrC,KAAM,CAAE,eAAAH,EAAgB,mBAAAI,CAAkB,EAAKT,EAC7CF,EACAD,EAAQE,CAAiB,CAC/B,EAEIW,EACE,KAAK,KAAKL,EAAiBR,EAAQE,CAAiB,CAAC,EACrDF,EAAQE,CAAiB,EACzBD,EACAa,CACN,EAEIC,EAAcH,EAAoB,EAAI,CAC1C,EAEQE,EAAcE,GAAS,CAC3Bf,EAAce,EAAM,KACpBL,GACJ,EAEQM,EAAsB,GAAK,CAC/B,EAAE,eAAc,EAEhB,MAAMC,EAAe,EAAE,OAAO,QAAQ,wBAAwB,EAC9D,GAAI,CAACA,EAAc,OAEnB,MAAMC,EAAaD,EAAa,QAAQ,SACxCX,EAAwB,uBAAuBY,CAAU,EAEzDR,GACJ,EAEQS,EAAWC,EAAS,IAAM,CAC9B,MAAMC,EAAgB,OAAO,YAAc,IAAM,QAAU,QAEvDA,IAAkBpB,IACtBA,EAAoBoB,EAEpBrB,EAAc,EACdU,IACD,EAAE,GAAG,EAENZ,EAAS,cAAc,iBAAiB,QAASkB,CAAmB,EACpE,OAAO,iBAAiB,SAAUG,CAAQ,EAE1CT,GACF,CAAC"}